<!-- aktualtimestamp: 1536652952
2018 szeptember 10. Programozás
  -->
<div class="parabellum">
<p class="main">
AZ ALGORITMUS<br />
<br />
Adat:<br />
a világban előfordló objektumok számunkra fontos tulajdonságai.<br />
<br />
Információ:<br />
az az adathalmaz, ami számunkra új ismeretet tartalmaz.<br />
<br />
Algoritmus:<br />
egy feladat megoldását eredményező véges számú lépésben véget érő, egyértelmű szabályokkal megfogalmazható műveletsorozat.<br />
<br />
Program:<br />
a számítógép számára érthető instrukciók sorozata, mely az adatok megfelelő számításaival és mozgatásaival egy feladat megoldását célozza.<br /></p>
</div>
<div class="parabellum">
<div id="more-article1536652952"><a onclick="show('less-article1536652952'); hide('more-article1536652952')" >
<p class="showline">Mutass többet!</p></a>
<br />
</div>
<div id="less-article1536652952" style="display: none; background-color: lightgray">
<a onclick="hide('less-article1536652952'); show('more-article1536652952')" >
<p class="showline">Rejtsd el!</p></a> 
<br />
<p class="main">
Ha egy algoritmust a számítógép által értelmezhető és végrehajtható lépésekből építünk fel, programnak nevezzük.<br />
<br />
Lépésekből áll, végrehajtása lépésenként történik.<br />
Minden lépésnek egyértelműen végrehajthatónak kell lennie.<br />
<br />
Az elemi lépéseket utasításnak nevezzük.<br />
<br />
A végrehajtásnak mindig van valamilyen tárgya (objektuma).<br />
<br />
A végrehajtandó instrukciónak valamilyen célja van.<br />
Az algoritmusnak általában vannak bemenő adatai, amiket felhasznál.<br />
<br />
Az algoritmusnak legalább egy kimenő adatot produkálnia kell.<br />
<br />
Az algoritmus véges számú lépésből áll.<br />
<br />
Legyen az algoritmus hatékony!<br />
- legyen megbízható.<br />
- a felhasználó szempontjait maximálisan vegye figyelembe.<br />
<br />
Egy tetszőleges algoritmus építő elemei<br />
<br />
Szekvencia<br />
egymás után végrehajtandó tevékenységek sorozata.<br />
<br />
Szelekció<br />
választás megadott tevékenységek közül.<br />
<br />
Iteráció<br />
megadott tevékenységek ismételt végrehajtása.<br />
<br />
Ugrás<br />
vezérlés átadása a program egy megadott pontjára.<br />
<br />
<br />
A literál olyan programozási eszköz, amelynek segítségével fix értékek építhetők be a programba.<br />
<br />
egész_szám: egy pozitív vagy negatív egész szám, vagy nulla.<br />
<br />
valós: egy tizedesekkel leírható szám.<br />
(pl. 6.32, 100.0, 0.0006)<br />
<br />
logikai: két logikai konstans létezik: true, false<br />
<br />
karakter: egy unicode karakter, szimpla aposztrófok közé tesszük pl. 'a', 'B'<br />
<br />
szöveg: akármilyen hosszú, unicode karakterekből álló sorozat, idézőjelek közé tesszük "Szia"<br />
<br />
<br />
PROGRAMOZÁS<br />
Algoritmizálási feladat:<br />
<br />
Írja ki két egész_szám összegét, szorzatát, különbségét!<br />
<br />
eljárás f1()<br />
a,b: egész_szám;<br />
a=x; b=y;<br />
ki: ( a + "+" + b + "=" + (a+b) );<br />
ki: ( a + "*" + b + "=" + (a*b) );<br />
ki: ( a + "-" + b + "=" + (a-b) );<br />
eljárás vége<br /></p>
</div>
<p class="headfoot" align="right">
	&nbsp; Forrás: &nbsp;
	<font color="#FFFFFF"><span style="background-color: #000000;">&nbsp; 
KjG jegyzet
 &nbsp;</span> </font></p>
</div>
